import{_ as n,p as a,q as s,a1 as e}from"./framework-6484158c.js";const t={},p=e(`<h1 id="chapter3-语言基础" tabindex="-1"><a class="header-anchor" href="#chapter3-语言基础" aria-hidden="true">#</a> Chapter3 语言基础</h1><h2 id="_3-7-函数" tabindex="-1"><a class="header-anchor" href="#_3-7-函数" aria-hidden="true">#</a> 3.7 函数</h2><blockquote><p>第十章会进行详细介绍</p></blockquote><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">functionName</span><span class="token punctuation">(</span><span class="token parameter">arg0<span class="token punctuation">,</span> arg1<span class="token punctuation">,</span><span class="token operator">...</span><span class="token punctuation">,</span>argN</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		statements
<span class="token punctuation">}</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>ps：只要碰到return语句，函数就会立即停止执行并退出。</p><p><strong>常见的提前终止函数执行操作：</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">sayHi</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> message</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span><span class="token punctuation">;</span>
		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Hello &quot;</span> <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token string">&quot;, &quot;</span> <span class="token operator">+</span> message<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 不会执行</span>
<span class="token punctuation">}</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>return语句可以不带返回值，默认会返回undefined。不写return语句的函数，默认也会返回undefined。</p><p><strong>严格模式对函数有一些限制：</strong></p><ul><li>函数不能以eval或arguments作为名称；</li><li>函数参数也不能叫eval或arguments；</li><li>两个命名参数不能拥有同一个名称。</li></ul><h2 id="_3-8-小结" tabindex="-1"><a class="header-anchor" href="#_3-8-小结" aria-hidden="true">#</a> 3.8 小结</h2><ul><li>ECMAScript的基本类型包括：undefined、Null、Boolean、Number、String和Symbol。</li><li>不区分浮点数和整数，只有Number一种数值数据类型。</li></ul>`,12),o=[p];function c(i,l){return a(),s("div",null,o)}const u=n(t,[["render",c],["__file","Chapter3.html.vue"]]);export{u as default};
