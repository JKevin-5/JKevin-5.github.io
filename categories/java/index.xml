<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Java on Kevin&#39;s Blog</title>
    <link>http://www.jkevinspark.com/categories/java/</link>
    <description>Recent content in Java on Kevin&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sun, 10 Apr 2022 00:00:00 +0000</lastBuildDate><atom:link href="http://www.jkevinspark.com/categories/java/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>【Java】阿里Java开发手册-部分总结（一）</title>
      <link>http://www.jkevinspark.com/p/20220410/</link>
      <pubDate>Sun, 10 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>http://www.jkevinspark.com/p/20220410/</guid>
      <description>文档的获取途径可以通过GitHub链接下载。
命名风格 所有命名  所有编程相关命名不能以下划线或美元符号_$开始或结束； 所有编程相关命名严禁使用拼音与英文混合的方式，也不允许直接使用中文的方式（按照正确的英文拼写和语法）； 代码和注释中避免使用任何人类语言中种族歧视或侮辱性词语； 为了达到代码自解释的目标，任何自定义编程元素在命名时，使用完整的单词组合来表达； 如果模块、接口、类、方法使用了设计模式，在命名时要体现出具体模式。  类、接口   类名使用UpperCamelCase风格（使用大写英文字母打头）；
  抽象类命名使用Abstract或Base开头；
  异常类命名使用Exception结尾；
  测试类命名以它要测试的类的名称开始，以Test结尾；
  接口类中的方法和属性不要加任何修饰符号（public也不要加），保持代码的简洁性，并加上有效的Javadoc注释*；
  接口和实现类的命名规则：
  对于Service和DAO类，内部的实现类用Impl的后缀与接口区别；
CacheServiceImpl实现CacheService接口
  如果是形容能力的接口名称，取对应的形容词为接口名（通常是-able结尾的形容词）。
AbstractTranslator实现Translatable
    枚举类*名带上Enum后缀，枚举成员名称需要全大写，单词间下划线隔开。
  方法、参数、成员变量、局部变量、常量、数组  方法名、参数名、成员变量、局部变量使用lowerCamelCase风格（使用小写英文字母打头）； 常量命名应该全部大写，单词间用下划线隔开； 类型与中括号紧挨相连来定义数组 Type[] arrayList； 在常量与变量命名时，表示类型的名词放在词尾，以提高辨识度nameList/startTime/workQueue；  包名  包名统一使用小写，点分隔符之间有且仅有一个自然语义的英语单词。包名统一使用单数形式，但是类名如果有复数含义，类名可以使用复数形式。  各层命名规约   Service/DAO层方法命名规约：
 获取单个对象的方法：get为前缀 获取多个对象的方法：list为前缀，复数结尾，如listObjects 获取统计值的方法：count为前缀 插入的方法：save/insert做前缀 删除的方法：remove/delete做前缀 修改的方法：update做前缀    领域模型命名规约</description>
    </item>
    
  </channel>
</rss>
